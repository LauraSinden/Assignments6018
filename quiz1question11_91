{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "98a04133-a607-4b97-b414-22e024018945",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2\n"
     ]
    }
   ],
   "source": [
    "#booleans\n",
    "#boolean True + boolean True - boolean False = \n",
    "#boolean True = BT\n",
    "#boolean Faulse = BF\n",
    "BT = 1\n",
    "BF = 0\n",
    "print((BT + BT) - BF)\n",
    "\n",
    "      "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "b05548ad-3839-417e-bc7c-1a0ceb598fee",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "True\n"
     ]
    }
   ],
   "source": [
    "#Booleans2\n",
    "#logical tracker = True\n",
    "# logical tracker = logical tracker and logical tracker\n",
    "#logical tracker = logical tracker \\ (logical tracker - logical tracker)\n",
    "#logical tracker = \n",
    "x = True\n",
    "y = ( True and True)\n",
    "z =  x or (y)\n",
    "print(z)\n",
    "\n",
    "\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "bd357731-9aa3-4ce9-8753-6c76cc600f4a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "C\n"
     ]
    }
   ],
   "source": [
    "#E Coli\n",
    "string = \"E Coli\"\n",
    "correct\n",
    "string[2]\n",
    "print(string[2])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "0810c4cd-7917-4501-b2da-e969e3ebbd78",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " I Love python\n"
     ]
    }
   ],
   "source": [
    "#Oh no my string has a typ0\n",
    "string = \" I Bove python\"\n",
    "newstring = string.replace(\"Bove\", \"Love\")\n",
    "print(newstring)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "92d683c2-542c-453e-a970-c3f5f2c39954",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "5\n"
     ]
    }
   ],
   "source": [
    "# adding integers and strings\n",
    "x = 2\n",
    "y = 3\n",
    "print(x + y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "2ecb1d6e-8784-4f7c-8d15-64b65653fd3d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "RedHen\n"
     ]
    }
   ],
   "source": [
    "#adding integers and strings-2\n",
    "x = \"Red\"\n",
    "y = \"Hen\"\n",
    "print( x + y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "13a662e5-ad2c-4503-8b76-82a1b9512578",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "73\n"
     ]
    }
   ],
   "source": [
    "#type output if strings \"7\" and \"3\" are added\n",
    "x = \"7\"\n",
    "y = \"3\"\n",
    "print(x + y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "7408e49c-8e7e-4c18-80d7-d32fadc8c470",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.13.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
